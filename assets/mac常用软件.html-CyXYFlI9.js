import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o,c as r,a as e}from"./app-CeN5l-4y.js";const n={},a=e("p",null,"Markdown 中我们经常会看到这样的描述目录的结构，但是 Markdown 并没有这样的语法用来生成这样的目录描述，那是怎么搞的呢？难道一个个字符的输入？",-1),d=e("p",null,"实际上一些第三方工具可以生成这样的目录结构文本，然后拷贝到 Markdown 中。",-1),m=e("p",null,"比如在 Mac 上，可以使用 brew install tree 安装 tree 命令，这个命令就能用来在终端中输出这样的目录结构文本，然后拷贝就行。Linux 和 Windows 也有 tree 命令，具体使用方式自行 Google 一下就行。",-1),c=e("p",null,'tree 命令部分常用命令 tree -a 显示所有 tree -d 只显示文档夹 tree -L n 显示项目的层级，n表示层级数，比如想要显示项目三层结构，可以用tree -l 3； tree -I pattern 用于过滤不想要显示的文档或者文档夹。比如你想要过滤项目中的 node_modules 文档夹，可以使用 tree -I "node_modules"； tree > tree.md 将项目结构输出到 tree.md 这个文档 tree -N 防止中文名乱码 生成目录，过滤 node_modules，防止中文乱码，输出到 目录结构.md 的 demo:',-1),i=e("p",null,'tree -N -d -I "node_modules" > 目录结构.md',-1),l=[a,d,m,c,i];function s(p,_){return o(),r("div",null,l)}const M=t(n,[["render",s],["__file","mac常用软件.html.vue"]]),w=JSON.parse(`{"path":"/coooder/mac/mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6.html","title":"","lang":"en-US","frontmatter":{"description":"Markdown 中我们经常会看到这样的描述目录的结构，但是 Markdown 并没有这样的语法用来生成这样的目录描述，那是怎么搞的呢？难道一个个字符的输入？ 实际上一些第三方工具可以生成这样的目录结构文本，然后拷贝到 Markdown 中。 比如在 Mac 上，可以使用 brew install tree 安装 tree 命令，这个命令就能用来在终端...","head":[["meta",{"property":"og:url","content":"https://2-mo.github.io/coooder/mac/mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"Tiu Mo's Blog"}],["meta",{"property":"og:description","content":"Markdown 中我们经常会看到这样的描述目录的结构，但是 Markdown 并没有这样的语法用来生成这样的目录描述，那是怎么搞的呢？难道一个个字符的输入？ 实际上一些第三方工具可以生成这样的目录结构文本，然后拷贝到 Markdown 中。 比如在 Mac 上，可以使用 brew install tree 安装 tree 命令，这个命令就能用来在终端..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-01T07:46:43.000Z"}],["meta",{"property":"article:author","content":"Tiu Mo"}],["meta",{"property":"article:modified_time","content":"2024-09-01T07:46:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-01T07:46:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tiu Mo\\",\\"url\\":\\"https://2-mo.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1720419990000,"updatedTime":1725176803000,"contributors":[{"name":"2-mo","email":"1982800736@qq.com","commits":1}]},"readingTime":{"minutes":1.04,"words":311},"filePathRelative":"coooder/mac/mac常用软件.md","localizedDate":"July 8, 2024","excerpt":"<p>Markdown 中我们经常会看到这样的描述目录的结构，但是 Markdown 并没有这样的语法用来生成这样的目录描述，那是怎么搞的呢？难道一个个字符的输入？</p>\\n<p>实际上一些第三方工具可以生成这样的目录结构文本，然后拷贝到 Markdown 中。</p>\\n<p>比如在 Mac 上，可以使用 brew install tree 安装 tree 命令，这个命令就能用来在终端中输出这样的目录结构文本，然后拷贝就行。Linux 和 Windows 也有 tree 命令，具体使用方式自行 Google 一下就行。</p>\\n<p>tree 命令部分常用命令\\ntree -a 显示所有\\ntree -d 只显示文档夹\\ntree -L n 显示项目的层级，n表示层级数，比如想要显示项目三层结构，可以用tree -l 3；\\ntree -I pattern 用于过滤不想要显示的文档或者文档夹。比如你想要过滤项目中的 node_modules 文档夹，可以使用 tree -I \\"node_modules\\"；\\ntree &gt; tree.md 将项目结构输出到 tree.md 这个文档\\ntree -N 防止中文名乱码\\n生成目录，过滤 node_modules，防止中文乱码，输出到 目录结构.md 的 demo:</p>","autoDesc":true}`);export{M as comp,w as data};
