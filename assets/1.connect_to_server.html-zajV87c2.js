import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as c,c as o,a as n,b as s,d as e,f as i}from"./app-COJaJ9Zq.js";const d={},r=i(`<h1 id="远程连接服务器" tabindex="-1"><a class="header-anchor" href="#远程连接服务器"><span>远程连接服务器</span></a></h1><h2 id="连接方式" tabindex="-1"><a class="header-anchor" href="#连接方式"><span>连接方式</span></a></h2><h3 id="终端连接" tabindex="-1"><a class="header-anchor" href="#终端连接"><span>终端连接</span></a></h3><p>cmd/powershell/terminal</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> ACCOUNT@REMOTE_IP  <span class="token comment"># eg: ssh leng@10.16.0.42</span>
<span class="token comment"># 第一次连接可能需要验证 key，输入‘yes’后回车</span>
<span class="token comment"># 输入密码时没有显示，输完后直接回车 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vscode-连接-推荐👍" tabindex="-1"><a class="header-anchor" href="#vscode-连接-推荐👍"><span>VSCode 连接（推荐👍）</span></a></h3>`,6),p={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},m=n("h3",{id:"教育版-pycharm-连接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#教育版-pycharm-连接"},[n("span",null,"教育版 PyCharm 连接")])],-1),u={href:"https://zhuanlan.zhihu.com/p/163521228",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,[s("社区版PyCharm没有远程连接功能，"),n("strong",null,"专业版"),s("和"),n("strong",null,"教育版"),s("的才有。")],-1),h=i(`<hr><h2 id="配置项目环境" tabindex="-1"><a class="header-anchor" href="#配置项目环境"><span>配置项目环境</span></a></h2><p>创建项目文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> YOUR_ROOT_PATH  <span class="token comment"># 一般为PycharmProjects或者桌面</span>
<span class="token function">mkdir</span> YOUR_PROJECT_DIR  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>打开 Terminal 新建环境</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda create <span class="token parameter variable">-n</span> YOUR_NAME <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3</span>.x  <span class="token comment"># 创建环境</span>
conda activate YOUR_NAME  <span class="token comment"># 激活环境</span>

conda deactivate  <span class="token comment"># 退出当前环境</span>
conda <span class="token function">env</span> list 或 $ conda info <span class="token parameter variable">-e</span>  <span class="token comment"># 查看当前环境列表</span>
conda remove <span class="token parameter variable">-n</span> YOUR_NAME <span class="token parameter variable">--all</span>  <span class="token comment"># 删除虚拟环境</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>装库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> pytorch torchvision torchaudio <span class="token assign-left variable">cudatoolkit</span><span class="token operator">=</span><span class="token number">11.1</span> <span class="token parameter variable">-c</span> pytorch <span class="token parameter variable">-c</span> conda-forge 
pip3 <span class="token function">install</span> opencv-python <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行文件" tabindex="-1"><a class="header-anchor" href="#运行文件"><span>运行文件</span></a></h2><p>(1) 右键run， 然后去configurations里删除ip地址</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 过程略</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>(2) 终端运行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python xxx.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>(3) screen 运行（离线）tmux 更好用，所以换了</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ tmux new <span class="token parameter variable">-s</span> SESSION_NAME
$ tmux <span class="token function">ls</span>
$ tmux a <span class="token parameter variable">-t</span> SESSION_NAME

$ tmux kill-session <span class="token parameter variable">-t</span> SESSION_NAME
<span class="token comment"># 分离窗口</span>
<span class="token comment"># 第一步：输入组合键 Ctrl+B，然后松开。</span>
<span class="token comment"># 第二步：输入字母 d。</span>

<span class="token comment"># 复制窗口</span>
<span class="token comment"># 第一步：按 Ctrl+B 组合键，然后松开。</span>
<span class="token comment"># 第二步：再单独按一下 c 键。</span>

<span class="token comment"># 切换窗口</span>
<span class="token comment"># 第一步：按 Ctrl-B 组合键，然后松开。</span>
<span class="token comment"># 第二步：按数字 0 键。</span>

按完前缀ctrl+B后，再按冒号：进入命令行模式，
输入以下命令：
$ <span class="token builtin class-name">set</span> <span class="token parameter variable">-g</span> mouse on

ctrl+B + <span class="token punctuation">[</span> the <span class="token string">&#39;Page Up/Down&#39;</span> 翻页
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">screen</span> 或 $ <span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token function">screen</span>

$ <span class="token function">screen</span> <span class="token parameter variable">-S</span> name  <span class="token comment"># 新建窗口并进入</span>

$ <span class="token function">screen</span> <span class="token parameter variable">-ls</span>  <span class="token comment"># 列出窗口</span>

There is a <span class="token function">screen</span> on:
<span class="token number">2637</span>.count <span class="token punctuation">(</span><span class="token number">12</span>/17/2015/10:00:32 AM<span class="token punctuation">)</span> <span class="token punctuation">(</span>Detached<span class="token punctuation">)</span>

$ <span class="token function">screen</span> <span class="token parameter variable">-r</span> <span class="token number">2637</span>  <span class="token comment"># 进入2637线程，恢复count会话窗口</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>会话分离</strong> 我们在一个窗口运行某个程序之后，想退出登录关闭terminal干点别的事，让程序在后台运行。这时就需要和窗口会话分离,有2种方式：</p><ol><li>快捷键<code>Ctrl a</code>表示进入命令模式 在当前会话窗口中按<code>Ctrl a</code> +<code>d</code>快捷键可以实现分离，这时窗口会弹出[detached]的提示，并回到主窗口。</li><li><code>screen -d name</code> # 远程detach某个session,前提是已经跳出了name窗口</li></ol></blockquote><blockquote><p><strong>杀死会话窗口</strong> 如果想关掉一个多余的窗口，有3种方法：</p><p><code>kill -9 threadnum</code> 例如在上面的2637，<code>kill -9 2637</code> 即可杀死线程，并杀死窗口</p><p>使用<code>Ctrl a</code> +<code>k</code> 杀死当前窗口和窗口中运行的程序</p><p>使用<code>Ctrl a</code> 然后输入<code>quit</code>命令退出Screen会话。需要注意的是，这样退出会杀死所有窗口并退出其中运行的所有程序</p><p><strong>清除死去的窗口</strong> 当窗口被杀死后，再用<code>screen -ls</code> 可以看到该窗口后面的(??? dead)字样，说明窗口死了，但是仍在占用空间。这时需要清除窗口</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">screen</span> <span class="token parameter variable">-wipe</span> <span class="token comment">#自动清除死去的窗口</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p><strong>2.5.3使用screen进行任务管理</strong> 当程序运行时间较长时,我们在当前Linux窗口直接运行程序，程序或许会因为网络问题异常终止。我们可以使用screen来解决本地突然离线的问题，因为screen相当于创建一个后台窗口在服务器，本地连接中断并不会影响正在运行的程序。我们在命令行敲入screen –ls命令，效果如图 2.21所示。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">1</span>.  <span class="token comment"># 常用的screen命令</span>
<span class="token number">2</span>.  <span class="token function">screen</span> –S name  <span class="token comment"># 创建一个窗口  </span>
<span class="token number">3</span>.  <span class="token function">screen</span> –ls  <span class="token comment"># 查看当前已经创建的窗口  </span>
<span class="token number">4</span>.  <span class="token function">screen</span> –d –r name  <span class="token comment"># 回到名字为name的窗口  </span>
<span class="token number">5</span>.  <span class="token function">screen</span> –X –S name quit  <span class="token comment"># 关闭名字为name的窗口</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="远程连接服务器-1" tabindex="-1"><a class="header-anchor" href="#远程连接服务器-1"><span>远程连接服务器</span></a></h2><p>VSCode更好用</p><h3 id="安装教育版-pycharm" tabindex="-1"><a class="header-anchor" href="#安装教育版-pycharm"><span>安装教育版 PyCharm</span></a></h3>`,23),b={href:"https://zhuanlan.zhihu.com/p/163521228",target:"_blank",rel:"noopener noreferrer"},k=i(`<p>创建项目文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> YOUR_ROOT_PATH  <span class="token comment"># 一般为PycharmProjects或者桌面</span>
<span class="token function">mkdir</span> YOUR_PROJECT_DIR  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>打开 Terminal 新建环境</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda create <span class="token parameter variable">-n</span> YOUR_NAME <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3</span>.x  <span class="token comment"># 创建环境</span>
conda activate YOUR_NAME  <span class="token comment"># 激活环境</span>

conda deactivate  <span class="token comment"># 退出当前环境</span>
conda <span class="token function">env</span> list 或 $ conda info <span class="token parameter variable">-e</span>  <span class="token comment"># 查看当前环境列表</span>
conda remove <span class="token parameter variable">-n</span> YOUR_NAME <span class="token parameter variable">--all</span>  <span class="token comment"># 删除虚拟环境</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>装库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> pytorch torchvision torchaudio <span class="token assign-left variable">cudatoolkit</span><span class="token operator">=</span><span class="token number">10.1</span> <span class="token parameter variable">-c</span> pytorch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新建/打开 项目，选择python解释器</p><p>Interpreter Settings 里修改解释器与mapping</p><p>1.本地创建项目</p><p>File-》New Project...</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">du</span> <span class="token parameter variable">-sh</span> *  <span class="token comment"># 查看每一个占了空间</span>
<span class="token function">df</span>  <span class="token comment"># 显示磁盘相关信息</span>

<span class="token function">ls</span>  <span class="token comment"># 列出当前文件夹内容</span>
<span class="token builtin class-name">cd</span> YOUR_DIR_PATH  <span class="token comment"># 进入路径</span>
<span class="token function">mkdir</span> YOUR_DIR_NAME  <span class="token comment"># 创建文件夹</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="root-ssh-远程连接" tabindex="-1"><a class="header-anchor" href="#root-ssh-远程连接"><span>Root ssh 远程连接</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> openssh-server

$ <span class="token function">sudo</span> <span class="token function">vim</span> /etc/ssh/sshd_config

<span class="token operator">&gt;</span> PermitRootLogin <span class="token function">yes</span>
<span class="token operator">&gt;</span> PermitEmptyPasswords no

$ <span class="token function">service</span> <span class="token function">ssh</span> restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="免密链接" tabindex="-1"><a class="header-anchor" href="#免密链接"><span>免密链接</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 本地终端</span>
$ ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;mo1031@live.com&quot;</span>  <span class="token comment"># 一路 Enter</span>
$ <span class="token function">vim</span> /Users/tiumo/.ssh/id_rsa.pub  <span class="token comment"># 打开密钥，手动复制</span>

<span class="token comment"># 远程终端</span>
$ <span class="token function">mkdir</span> .ssh
$ <span class="token builtin class-name">cd</span> .ssh
$ <span class="token function">touch</span> authorized_keys
$ <span class="token function">vim</span> authorized_keys
在 /home/leng/.ssh/authorized_keys  <span class="token comment"># 手动粘贴</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="校外连接" tabindex="-1"><a class="header-anchor" href="#校外连接"><span>校外连接</span></a></h3><h4 id="配置ssh监控端口" tabindex="-1"><a class="header-anchor" href="#配置ssh监控端口"><span>配置ssh监控端口</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">vim</span> /etc/ssh/sshd_config
<span class="token string">&#39;add&#39;</span> ListenAddress <span class="token number">0.0</span>.0.0:5122<span class="token punctuation">(</span>YOUR_PORT<span class="token punctuation">)</span>

<span class="token comment"># 例如：</span>
ListenAddress <span class="token number">0.0</span>.0.0:5122
ListenAddress <span class="token number">0.0</span>.0.0:22

$ <span class="token function">service</span> sshd restart  <span class="token comment"># （如果selinux不设置为disabled，则无法生效）</span>

$ <span class="token function">sudo</span> <span class="token function">netstat</span> -anp<span class="token operator">|</span><span class="token function">grep</span> sshd  <span class="token comment"># 查看端口号</span>

<span class="token comment"># 如果系统升级过ssh，即使修改配置文件/etc/ssh/sshd_config也不会生效，</span>
<span class="token comment"># 升级openssh后，配置文件被修改到/usr/local/etc/sshd_config，</span>
<span class="token comment"># 所以修改这个/usr/local/etc/sshd_config</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="本机操作" tabindex="-1"><a class="header-anchor" href="#本机操作"><span>本机操作</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">1</span>.安装VPN软件EasyConnect -<span class="token operator">&gt;</span> https://vpn.cqupt.edu.cn/
<span class="token number">2</span>.安装lemon -<span class="token operator">&gt;</span> https://lemon.qq.com（App Store版无此功能）
<span class="token number">3</span>.开机启动项中开启两个守护进程
    a.<span class="token string">&quot;com.sangfor.ECAgentProxy.plist&quot;</span>
    b.<span class="token string">&quot;com.sangfor.EasyMonitor&quot;</span>

$ <span class="token function">ssh</span> <span class="token parameter variable">-p</span> <span class="token number">5122</span> myName@hostname
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令行启动向日葵" tabindex="-1"><a class="header-anchor" href="#命令行启动向日葵"><span>命令行启动向日葵</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> /usr/local/sunlogin/bin/sunloginclient  <span class="token comment"># 一般会报错</span>

<span class="token comment"># 所以换个方式, 开机加载项中去改吧</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="改变文件用户权限" tabindex="-1"><a class="header-anchor" href="#改变文件用户权限"><span>改变文件用户权限</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">mv</span> /home/guest/Documents/nemo /home/nemo

$ <span class="token function">sudo</span> <span class="token function">cp</span> /home/guest/.bashrc /home/nemo/.bashrc

$ <span class="token function">sudo</span> <span class="token function">chown</span> nemo.nemo <span class="token parameter variable">-R</span> nemo  <span class="token comment"># chown runoob:runoobgroup file1.txt </span>
<span class="token comment"># -R 表示当前前目录下的所有文件与子目录</span>

$ <span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">600</span> ××× （只有所有者有读和写的权限）
$ <span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">644</span> ××× （所有者有读和写的权限，组用户只有读的权限）
$ <span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">700</span> ××× （只有所有者有读和写以及执行的权限）
$ <span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">666</span> ××× （每个人都有读和写的权限）
$ <span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">777</span> ××× （每个人都有读和写以及执行的权限）

<span class="token comment"># 其中×××指文件名（也可以是文件夹名，不过要在chmod后加-ld）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function g(f,_){const a=t("ExternalLinkIcon");return c(),o("div",null,[r,n("p",null,[s("地址："),n("a",p,[s("https://code.visualstudio.com/"),e(a)])]),m,n("blockquote",null,[n("p",null,[n("a",u,[s("Pycharm-学生免费专业版安装 - 知乎 (zhihu.com)"),e(a)])]),v]),h,n("blockquote",null,[n("p",null,[n("a",b,[s("Pycharm-学生免费专业版安装 - 知乎 (zhihu.com)"),e(a)])])]),k])}const $=l(d,[["render",g],["__file","1.connect_to_server.html.vue"]]),P=JSON.parse(`{"path":"/coooder/ubuntu/base/1.connect_to_server.html","title":"远程连接服务器","lang":"en-US","frontmatter":{"description":"远程连接服务器 连接方式 终端连接 cmd/powershell/terminal VSCode 连接（推荐👍） 地址：https://code.visualstudio.com/ 教育版 PyCharm 连接 Pycharm-学生免费专业版安装 - 知乎 (zhihu.com) 社区版PyCharm没有远程连接功能，专业版和教育版的才有。 配置项目...","head":[["meta",{"property":"og:url","content":"https://2-mo.github.io/coooder/ubuntu/base/1.connect_to_server.html"}],["meta",{"property":"og:site_name","content":"Tiu Mo's Blog"}],["meta",{"property":"og:title","content":"远程连接服务器"}],["meta",{"property":"og:description","content":"远程连接服务器 连接方式 终端连接 cmd/powershell/terminal VSCode 连接（推荐👍） 地址：https://code.visualstudio.com/ 教育版 PyCharm 连接 Pycharm-学生免费专业版安装 - 知乎 (zhihu.com) 社区版PyCharm没有远程连接功能，专业版和教育版的才有。 配置项目..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-01T07:46:43.000Z"}],["meta",{"property":"article:author","content":"Tiu Mo"}],["meta",{"property":"article:modified_time","content":"2024-09-01T07:46:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"远程连接服务器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-01T07:46:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tiu Mo\\",\\"url\\":\\"https://2-mo.github.io\\"}]}"]]},"headers":[{"level":2,"title":"连接方式","slug":"连接方式","link":"#连接方式","children":[{"level":3,"title":"终端连接","slug":"终端连接","link":"#终端连接","children":[]},{"level":3,"title":"VSCode 连接（推荐👍）","slug":"vscode-连接-推荐👍","link":"#vscode-连接-推荐👍","children":[]},{"level":3,"title":"教育版 PyCharm 连接","slug":"教育版-pycharm-连接","link":"#教育版-pycharm-连接","children":[]}]},{"level":2,"title":"配置项目环境","slug":"配置项目环境","link":"#配置项目环境","children":[]},{"level":2,"title":"运行文件","slug":"运行文件","link":"#运行文件","children":[]},{"level":2,"title":"远程连接服务器","slug":"远程连接服务器-1","link":"#远程连接服务器-1","children":[{"level":3,"title":"安装教育版 PyCharm","slug":"安装教育版-pycharm","link":"#安装教育版-pycharm","children":[]},{"level":3,"title":"Root ssh 远程连接","slug":"root-ssh-远程连接","link":"#root-ssh-远程连接","children":[]},{"level":3,"title":"免密链接","slug":"免密链接","link":"#免密链接","children":[]},{"level":3,"title":"校外连接","slug":"校外连接","link":"#校外连接","children":[]},{"level":3,"title":"命令行启动向日葵","slug":"命令行启动向日葵","link":"#命令行启动向日葵","children":[]},{"level":3,"title":"改变文件用户权限","slug":"改变文件用户权限","link":"#改变文件用户权限","children":[]}]}],"git":{"createdTime":1719572997000,"updatedTime":1725176803000,"contributors":[{"name":"2-mo","email":"1982800736@qq.com","commits":1}]},"readingTime":{"minutes":5.13,"words":1538},"filePathRelative":"coooder/ubuntu/base/1.connect_to_server.md","localizedDate":"June 28, 2024","excerpt":"\\n<h2>连接方式</h2>\\n<h3>终端连接</h3>\\n<p>cmd/powershell/terminal</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">ssh</span> ACCOUNT@REMOTE_IP  <span class=\\"token comment\\"># eg: ssh leng@10.16.0.42</span>\\n<span class=\\"token comment\\"># 第一次连接可能需要验证 key，输入‘yes’后回车</span>\\n<span class=\\"token comment\\"># 输入密码时没有显示，输完后直接回车 </span>\\n</code></pre></div>","autoDesc":true}`);export{$ as comp,P as data};
