import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as p}from"./app-COJaJ9Zq.js";const t={},o=p(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
@author yutanglee
@description 这个代码可以免浏览器拨号上网，原理很简单，就是给认证服务器发送一个http请求。
@use 你需要提供上网账号、密码和运营商，是否采用手机端或者PC端是可选的。手机端和PC端是指，重邮的每个上网账号可以同时存在一个PC账号和手机端。
&quot;&quot;&quot;</span>
<span class="token keyword">from</span> ast <span class="token keyword">import</span> arg
<span class="token keyword">from</span> pydoc <span class="token keyword">import</span> describe
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> subprocess
<span class="token keyword">import</span> re
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> base64


<span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>usr<span class="token punctuation">,</span> psw<span class="token punctuation">,</span> isp<span class="token punctuation">,</span> ip<span class="token punctuation">,</span> mobile<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    
    url <span class="token operator">=</span> <span class="token string">&#39;http://192.168.200.2:801/eportal/?c=Portal&amp;a=login&amp;callback=dr1003&amp;login_method=1&amp;&#39;</span> <span class="token operator">+</span>\\
        <span class="token string">&#39;user_account=%2C0%2C&#39;</span> <span class="token operator">+</span> usr <span class="token operator">+</span> <span class="token string">&#39;%40&#39;</span> <span class="token operator">+</span> isp <span class="token operator">+</span><span class="token string">&#39;&amp;user_password=&#39;</span> <span class="token operator">+</span> psw <span class="token operator">+</span> <span class="token string">&#39;&amp;wlan_user_ip=&#39;</span> <span class="token operator">+</span> ip <span class="token operator">+</span> \\
        <span class="token string">&#39;&amp;wlan_user_ipv6=&amp;wlan_user_mac=000000000000&amp;wlan_ac_ip=&amp;wlan_ac_name=&amp;jsVersion=3.3.3&amp;v=10390&#39;</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> mobile<span class="token punctuation">:</span>
        headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.58&#39;</span><span class="token punctuation">}</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Mobile Safari/537.36 Edg/114.0.1823.58&#39;</span><span class="token punctuation">}</span>
    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    <span class="token keyword">return</span> r<span class="token punctuation">.</span>text

<span class="token keyword">def</span> <span class="token function">get_local_ip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token comment"># 运行 ip a 命令获取网络接口信息</span>
        output <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
        
        <span class="token comment"># 使用正则表达式解析 IP 地址</span>
        ip_pattern <span class="token operator">=</span> <span class="token string">r&quot;inet (\\d+\\.\\d+\\.\\d+\\.\\d+)&quot;</span>
        <span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>ip_pattern<span class="token punctuation">,</span> output<span class="token punctuation">)</span>
        
        <span class="token comment"># 筛选出以特定 IP 段开头的 IP 地址</span>
        target_ips <span class="token operator">=</span> <span class="token punctuation">[</span>ip <span class="token keyword">for</span> ip <span class="token keyword">in</span> <span class="token keyword">match</span> <span class="token keyword">if</span> ip<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;10.16.&quot;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> ip<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;10.20.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        
        <span class="token keyword">if</span> target_ips<span class="token punctuation">:</span>
            <span class="token keyword">return</span> target_ips<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 返回第一个满足条件的 IP 地址</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
    <span class="token keyword">except</span> subprocess<span class="token punctuation">.</span>CalledProcessError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>

    
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    args <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    args<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--user&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&lt;your_id&gt;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;your account for CQUPT network, maybe is your id number login ehall.cqupt.edu.cn&#39;</span><span class="token punctuation">)</span>
    args<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--psw&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&lt;your_password&gt;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">)</span>
    args<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--isp&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&lt;your_isp&gt;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;cmcc|telecom|unicom|xyw&#39;</span><span class="token punctuation">)</span>
    args<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--mobile&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;do you want use mobile mode?&#39;</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> args<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> args<span class="token punctuation">.</span>isp <span class="token operator">!=</span> <span class="token string">&#39;cmcc&#39;</span> <span class="token keyword">and</span> args<span class="token punctuation">.</span>isp <span class="token operator">!=</span> <span class="token string">&#39;telecom&#39;</span> <span class="token keyword">and</span> args<span class="token punctuation">.</span>isp <span class="token operator">!=</span> <span class="token string">&#39;unicom&#39;</span> <span class="token keyword">and</span> args<span class="token punctuation">.</span>isp <span class="token operator">!=</span> <span class="token string">&#39;xyw&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;运营商只支持cmcc|telecom|unicom|xyw  重新检查输入！&#39;</span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    ip <span class="token operator">=</span> get_local_ip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> ip <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        ip <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;自动获取IP失败, 请你输入正确的IP: &quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;your ip is:&#39;</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;your user is:&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>user<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;your password is:&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>psw<span class="token punctuation">)</span>    
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;your isp is:&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>isp<span class="token punctuation">)</span>
    args<span class="token punctuation">.</span>mobile <span class="token operator">=</span> <span class="token boolean">True</span>

    response <span class="token operator">=</span> login<span class="token punctuation">(</span>args<span class="token punctuation">.</span>user<span class="token punctuation">,</span> args<span class="token punctuation">.</span>psw<span class="token punctuation">,</span> args<span class="token punctuation">.</span>isp<span class="token punctuation">,</span> ip<span class="token punctuation">,</span> args<span class="token punctuation">.</span>mobile<span class="token punctuation">)</span>
    start_index <span class="token operator">=</span> response<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;&quot;result&quot;:&quot;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;result&quot;:&quot;&#39;</span><span class="token punctuation">)</span>
    end_index <span class="token operator">=</span> response<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">,</span> start_index<span class="token punctuation">)</span>
    result_value <span class="token operator">=</span> response<span class="token punctuation">[</span>start_index<span class="token punctuation">:</span>end_index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> result_value <span class="token operator">==</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;登录成功！&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        start_index <span class="token operator">=</span> response<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;&quot;msg&quot;:&quot;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;msg&quot;:&quot;&#39;</span><span class="token punctuation">)</span>
        end_index <span class="token operator">=</span> response<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">,</span> start_index<span class="token punctuation">)</span>
        msg_encoded <span class="token operator">=</span> response<span class="token punctuation">[</span>start_index<span class="token punctuation">:</span>end_index<span class="token punctuation">]</span>
        <span class="token comment"># 对msg进行Base64解码</span>
        msg_decoded <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>msg_encoded<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span>msg_decoded<span class="token punctuation">,</span> response<span class="token punctuation">)</span>
        <span class="token keyword">if</span> msg_decoded <span class="token operator">==</span> <span class="token string">&#39;ldap auth error&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;密码错误！&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> msg_decoded <span class="token operator">==</span> <span class="token string">&#39;userid error1&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;账号不存在！&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","连接网络.html.vue"]]),d=JSON.parse(`{"path":"/coooder/ubuntu/base/%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C.html","title":"","lang":"en-US","frontmatter":{"head":[["meta",{"property":"og:url","content":"https://2-mo.github.io/coooder/ubuntu/base/%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C.html"}],["meta",{"property":"og:site_name","content":"Tiu Mo's Blog"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-13T13:38:09.000Z"}],["meta",{"property":"article:author","content":"Tiu Mo"}],["meta",{"property":"article:modified_time","content":"2025-03-13T13:38:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-13T13:38:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tiu Mo\\",\\"url\\":\\"https://2-mo.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1741873089000,"updatedTime":1741873089000,"contributors":[{"name":"Tiu Mo","email":"1982800736@qq.com","commits":1}]},"readingTime":{"minutes":1.71,"words":513},"filePathRelative":"coooder/ubuntu/base/连接网络.md","localizedDate":"March 13, 2025","excerpt":"<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token triple-quoted-string string\\">\\"\\"\\"\\n@author yutanglee\\n@description 这个代码可以免浏览器拨号上网，原理很简单，就是给认证服务器发送一个http请求。\\n@use 你需要提供上网账号、密码和运营商，是否采用手机端或者PC端是可选的。手机端和PC端是指，重邮的每个上网账号可以同时存在一个PC账号和手机端。\\n\\"\\"\\"</span>\\n<span class=\\"token keyword\\">from</span> ast <span class=\\"token keyword\\">import</span> arg\\n<span class=\\"token keyword\\">from</span> pydoc <span class=\\"token keyword\\">import</span> describe\\n<span class=\\"token keyword\\">import</span> requests\\n<span class=\\"token keyword\\">import</span> subprocess\\n<span class=\\"token keyword\\">import</span> re\\n<span class=\\"token keyword\\">import</span> argparse\\n<span class=\\"token keyword\\">import</span> base64\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">login</span><span class=\\"token punctuation\\">(</span>usr<span class=\\"token punctuation\\">,</span> psw<span class=\\"token punctuation\\">,</span> isp<span class=\\"token punctuation\\">,</span> ip<span class=\\"token punctuation\\">,</span> mobile<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    \\n    url <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'http://192.168.200.2:801/eportal/?c=Portal&amp;a=login&amp;callback=dr1003&amp;login_method=1&amp;'</span> <span class=\\"token operator\\">+</span>\\\\\\n        <span class=\\"token string\\">'user_account=%2C0%2C'</span> <span class=\\"token operator\\">+</span> usr <span class=\\"token operator\\">+</span> <span class=\\"token string\\">'%40'</span> <span class=\\"token operator\\">+</span> isp <span class=\\"token operator\\">+</span><span class=\\"token string\\">'&amp;user_password='</span> <span class=\\"token operator\\">+</span> psw <span class=\\"token operator\\">+</span> <span class=\\"token string\\">'&amp;wlan_user_ip='</span> <span class=\\"token operator\\">+</span> ip <span class=\\"token operator\\">+</span> \\\\\\n        <span class=\\"token string\\">'&amp;wlan_user_ipv6=&amp;wlan_user_mac=000000000000&amp;wlan_ac_ip=&amp;wlan_ac_name=&amp;jsVersion=3.3.3&amp;v=10390'</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> mobile<span class=\\"token punctuation\\">:</span>\\n        headers <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token string\\">'User-Agent'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.58'</span><span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n        headers <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token string\\">'User-Agent'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Mobile Safari/537.36 Edg/114.0.1823.58'</span><span class=\\"token punctuation\\">}</span>\\n    r <span class=\\"token operator\\">=</span> requests<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>url<span class=\\"token operator\\">=</span>url<span class=\\"token punctuation\\">,</span> headers<span class=\\"token operator\\">=</span>headers<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> r<span class=\\"token punctuation\\">.</span>text\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_local_ip</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token comment\\"># 运行 ip a 命令获取网络接口信息</span>\\n        output <span class=\\"token operator\\">=</span> subprocess<span class=\\"token punctuation\\">.</span>check_output<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"ip\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"a\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>decode<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"utf-8\\"</span><span class=\\"token punctuation\\">)</span>\\n        \\n        <span class=\\"token comment\\"># 使用正则表达式解析 IP 地址</span>\\n        ip_pattern <span class=\\"token operator\\">=</span> <span class=\\"token string\\">r\\"inet (\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+)\\"</span>\\n        <span class=\\"token keyword\\">match</span> <span class=\\"token operator\\">=</span> re<span class=\\"token punctuation\\">.</span>findall<span class=\\"token punctuation\\">(</span>ip_pattern<span class=\\"token punctuation\\">,</span> output<span class=\\"token punctuation\\">)</span>\\n        \\n        <span class=\\"token comment\\"># 筛选出以特定 IP 段开头的 IP 地址</span>\\n        target_ips <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>ip <span class=\\"token keyword\\">for</span> ip <span class=\\"token keyword\\">in</span> <span class=\\"token keyword\\">match</span> <span class=\\"token keyword\\">if</span> ip<span class=\\"token punctuation\\">.</span>startswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"10.16.\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">or</span> ip<span class=\\"token punctuation\\">.</span>startswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"10.20.\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n        \\n        <span class=\\"token keyword\\">if</span> target_ips<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> target_ips<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span>  <span class=\\"token comment\\"># 返回第一个满足条件的 IP 地址</span>\\n        <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">None</span>\\n    <span class=\\"token keyword\\">except</span> subprocess<span class=\\"token punctuation\\">.</span>CalledProcessError<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">None</span>\\n\\n    \\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'__main__'</span><span class=\\"token punctuation\\">:</span>\\n    args <span class=\\"token operator\\">=</span> argparse<span class=\\"token punctuation\\">.</span>ArgumentParser<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    args<span class=\\"token punctuation\\">.</span>add_argument<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'--user'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">type</span><span class=\\"token operator\\">=</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">,</span> default<span class=\\"token operator\\">=</span><span class=\\"token string\\">'&lt;your_id&gt;'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">help</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">'your account for CQUPT network, maybe is your id number login ehall.cqupt.edu.cn'</span><span class=\\"token punctuation\\">)</span>\\n    args<span class=\\"token punctuation\\">.</span>add_argument<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'--psw'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">type</span><span class=\\"token operator\\">=</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">,</span> default<span class=\\"token operator\\">=</span><span class=\\"token string\\">'&lt;your_password&gt;'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">help</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">'password'</span><span class=\\"token punctuation\\">)</span>\\n    args<span class=\\"token punctuation\\">.</span>add_argument<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'--isp'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">type</span><span class=\\"token operator\\">=</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">,</span> default<span class=\\"token operator\\">=</span><span class=\\"token string\\">'&lt;your_isp&gt;'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">help</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">'cmcc|telecom|unicom|xyw'</span><span class=\\"token punctuation\\">)</span>\\n    args<span class=\\"token punctuation\\">.</span>add_argument<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'--mobile'</span><span class=\\"token punctuation\\">,</span> action<span class=\\"token operator\\">=</span><span class=\\"token string\\">'store_true'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">help</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">'do you want use mobile mode?'</span><span class=\\"token punctuation\\">)</span>\\n    args <span class=\\"token operator\\">=</span> args<span class=\\"token punctuation\\">.</span>parse_args<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    \\n    <span class=\\"token keyword\\">if</span> args<span class=\\"token punctuation\\">.</span>isp <span class=\\"token operator\\">!=</span> <span class=\\"token string\\">'cmcc'</span> <span class=\\"token keyword\\">and</span> args<span class=\\"token punctuation\\">.</span>isp <span class=\\"token operator\\">!=</span> <span class=\\"token string\\">'telecom'</span> <span class=\\"token keyword\\">and</span> args<span class=\\"token punctuation\\">.</span>isp <span class=\\"token operator\\">!=</span> <span class=\\"token string\\">'unicom'</span> <span class=\\"token keyword\\">and</span> args<span class=\\"token punctuation\\">.</span>isp <span class=\\"token operator\\">!=</span> <span class=\\"token string\\">'xyw'</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'运营商只支持cmcc|telecom|unicom|xyw  重新检查输入！'</span><span class=\\"token punctuation\\">)</span>\\n        exit<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n\\n    ip <span class=\\"token operator\\">=</span> get_local_ip<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> ip <span class=\\"token keyword\\">is</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        ip <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">input</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"自动获取IP失败, 请你输入正确的IP: \\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'your ip is:'</span><span class=\\"token punctuation\\">,</span> ip<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'your user is:'</span><span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">.</span>user<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'your password is:'</span><span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">.</span>psw<span class=\\"token punctuation\\">)</span>    \\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'your isp is:'</span><span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">.</span>isp<span class=\\"token punctuation\\">)</span>\\n    args<span class=\\"token punctuation\\">.</span>mobile <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">True</span>\\n\\n    response <span class=\\"token operator\\">=</span> login<span class=\\"token punctuation\\">(</span>args<span class=\\"token punctuation\\">.</span>user<span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">.</span>psw<span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">.</span>isp<span class=\\"token punctuation\\">,</span> ip<span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">.</span>mobile<span class=\\"token punctuation\\">)</span>\\n    start_index <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span>find<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\\"result\\":\\"'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\\"result\\":\\"'</span><span class=\\"token punctuation\\">)</span>\\n    end_index <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span>find<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\\"'</span><span class=\\"token punctuation\\">,</span> start_index<span class=\\"token punctuation\\">)</span>\\n    result_value <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">[</span>start_index<span class=\\"token punctuation\\">:</span>end_index<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">if</span> result_value <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'1'</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'登录成功！'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n        start_index <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span>find<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\\"msg\\":\\"'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\\"msg\\":\\"'</span><span class=\\"token punctuation\\">)</span>\\n        end_index <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span>find<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\\"'</span><span class=\\"token punctuation\\">,</span> start_index<span class=\\"token punctuation\\">)</span>\\n        msg_encoded <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">[</span>start_index<span class=\\"token punctuation\\">:</span>end_index<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token comment\\"># 对msg进行Base64解码</span>\\n        msg_decoded <span class=\\"token operator\\">=</span> base64<span class=\\"token punctuation\\">.</span>b64decode<span class=\\"token punctuation\\">(</span>msg_encoded<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>decode<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'utf-8'</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>msg_decoded<span class=\\"token punctuation\\">,</span> response<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span> msg_decoded <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'ldap auth error'</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'密码错误！'</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">elif</span> msg_decoded <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'userid error1'</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'账号不存在！'</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>"}`);export{k as comp,d as data};
